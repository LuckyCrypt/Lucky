// дз3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cstdlib>
#include <locale>
#include <ctime>
using namespace std;
void igrok1(int A[], const int N)
{
	int n = -100;
	for (int i = 0; i < N; i++)
	{
		A[i] = rand() % 7;
		cout << A[i] << "  ";
		if (i % 2 !=0) {
			cout << "|  ";
		}
	}
	cout << endl;
}
void igrok2(int B[], const int N)
{
	int n = -100;
	for (int i = 0; i < N; i++)
	{
		B[i] = rand() % 7;
		cout << B[i] << "  ";
		if (i % 2 != 0) {
			cout << "|  ";
		}
	}
	cout << endl;
}
int main()
{
	const int N = 8;
	setlocale(LC_ALL, "RU");
	srand(time(NULL));
	int A[N], B[N];
	int n=0,g=0;
	igrok1(A, N);
	for (int i = 0; i < N; i++)
	{
		n += A[i];
	}
	cout << "--" << n << endl;
	igrok2(B, N);
	for (int i = 0; i < N; i++)
	{
		g += B[i];
	}
	cout << "--" << g << endl;
	if (n > g) 
	{
		cout << "Выйграл 1 игрок";
	}
	else
	{
		cout << "Выйграл 2 игрок";
	}
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
